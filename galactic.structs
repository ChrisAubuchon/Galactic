; ---------------------------------------------------------------------------

cpm_fcb		struc ;	(sizeof=0x24)
drive_num:	db ?
filename:	db 8 dup(?)
filetype:	db 3 dup(?)
fcb_ex:		db ?
reserved_1:	db ?
reserved_2:	db ?
fcb_rc:		db ?
fcb_al:		db 16 dup(?)
fcb_cr:		db ?
fcb_rnd:	db 3 dup(?)
cpm_fcb		ends

; ---------------------------------------------------------------------------

input_t		struc ;	(sizeof=0x6)
field_0:	db 5 dup(?)		; enum charMap
field_5:	db ?			; enum parseRval
input_t		ends

; ---------------------------------------------------------------------------

room_t	struc ;	(sizeof=0x1A)
	scoreBonus:		db ?		; Score bonus when entering room
	roomFlags:		db ?		; enum roomFlags
	verbose_offset:		db 2 dup(?)
	terse_offset:		db 2 dup(?)
	first_offset:		db 2 dup(?)
	ambient_offset:		db 2 dup(?)
	north_room:		db ?
	south_room:		db ?
	east_room:		db ?
	west_room:		db ?
	ne_room:		db ?
	nw_room:		db ?
	se_room:		db ?
	sw_room:		db ?
	up_room:		db ?
	down_room:		db ?
	cw_room:		db ?
	ccw_room:		db ?
	enter_room:		db ?
	exit_room:		db ?
	inward_room:		db ?
	outward_room:		db ?
room_t	ends

; ---------------------------------------------------------------------------

hire_t		struc ;	(sizeof=0x3)
hiredFlag:	db ?
hireMsgHi:	db ?
hireMsgLo:	db ?
hire_t		ends

; ---------------------------------------------------------------------------

msgOffset	struc ;	(sizeof=0x2)
hiByte:		db ?
loByte:		db ?
msgOffset	ends

; ---------------------------------------------------------------------------

landable_t	struc ;	(sizeof=0x3)
canLandFlag:	db ?			; If 1,	the ship can land. If 0, the msg at msgHi,msgLo	is printed
msgHi:		db ?
msgLo:		db ?
landable_t	ends

object_t struct ; (sizeof=0x6)
scoreBonus:		db ?
field_1:		db ?
floorMessageIndex:	db ?
invenMessageIndex:	db ?
location:		db ?
roomNumber:		db ?

